AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS

  Sample SAM Template for AWS

Metadata:
  AWS::ServerlessRepo::Application:
    Name: NvaDoiRequestsApi
    Description: NVA Doi Requests API
    Author: Unit
    SpdxLicenseId: MIT
    LicenseUrl: LICENSE
    Labels: [ '${GIT_REPO}', '${CODEBUILD_RESOLVED_SOURCE_VERSION}', '@${BUILD_TIMESTAMP}' ]

Globals:
  Function:
    Timeout: 20
  Api:
    Cors:
      AllowMethods: "'POST, PUT, GET,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"


Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: LambdaDefaults
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - sts:AssumeRole
                  - sts:TagSession
                Resource: "*"

  EventConsumer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: transform-handler
      Handler: handlers.EventConsumer::handleRequest
      Runtime: java11
      MemorySize: 1400
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          EVENT_BUS: !GetAtt EventBus.Name
  EventConducer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: transform-handler
      Handler: handlers.EventConducer::handleRequest
      Runtime: java11
      MemorySize: 1400
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          EVENT_BUS: !GetAtt EventBus.Name

  EventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: orestis-event-bus


